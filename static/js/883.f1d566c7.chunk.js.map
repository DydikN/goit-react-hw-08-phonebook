{"version":3,"file":"static/js/883.f1d566c7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactForm/contact-form.module.scss?dbb0","pages/ContactsPage/ContactForm/initialState.js","redux/contacts/contacts-selectors.js","pages/ContactsPage/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","pages/ContactsPage/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/ContactList/contact-list.module.scss?2899","pages/ContactsPage/ContactList/ContactList.jsx","pages/ContactsPage/ConpactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contact-form_container__Rl-Ya\",\"title\":\"contact-form_title__0RnvB\",\"input\":\"contact-form_input__POZ4W\",\"btnSubmit\":\"contact-form_btnSubmit__AJIwo\"};","const inititalState = {\n  name: '',\n  number: '',\n};\n\nexport default inititalState;\n","export const getContacts = store => store.contacts.items;\n\nexport const getLoadig = store => store.contacts.isLoading;\n\nexport const getError = store => store.contacts.error;\n\nexport const getVisibleContacts = ({ filter, contacts }) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  const result = contacts.items.filter(({ name, number }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n    );\n  });\n\n  return result;\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport * as React from 'react';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\n\nimport styles from './contact-form.module.scss';\nimport inititalState from './initialState';\nimport {\n  fetchContacts,\n  addContact,\n} from '../../../redux/contacts/contacts-operations';\nimport { getContacts } from '../../../redux/contacts/contacts-selectors';\n\nfunction ContactForm() {\n  const [state, setState] = useState({ ...inititalState });\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return Notiflix.Notify.failure(`${name} is already in contacts`);\n    }\n\n    const allData = {\n      name: data.get('name').trim(),\n      number: data.get('number').trim(),\n    };\n\n    if (name.trim() === '' && number.trim() === '') {\n      return Notiflix.Notify.failure(`Please fill out contact form`);\n    }\n\n    dispatch(addContact(allData));\n    setState({ ...inititalState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        onChange={handleChange}\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        type=\"text\"\n        label=\"Name\"\n        name=\"name\"\n        autoFocus\n      />\n      <TextField\n        margin=\"normal\"\n        required\n        fullWidth\n        onChange={handleChange}\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        name=\"number\"\n        label=\"number\"\n        type=\"tel\"\n      />\n      <Button\n        className={styles.btnSubmit}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        sx={{ mt: 3, mb: 2, backgroundColor: 'rgb(39, 61, 164)' }}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n}\n\nexport default ContactForm;\n","export const getFilter = store => store.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { TextField } from '@mui/material';\n\nimport { setFilter } from '../../../redux/filter/filter-slice';\nimport { getFilter } from '../../../redux/filter/filter-selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(getFilter);\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <>\n      <p>Find contacts by name</p>\n\n      <TextField\n        margin=\"normal\"\n        size=\"small\"\n        onChange={changeFilter}\n        value={filter}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        type=\"text\"\n      />\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__vtZjR\",\"item\":\"contact-list_item__Meq8z\",\"text\":\"contact-list_text__K3EqJ\",\"button\":\"contact-list_button__+fV1o\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\n\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\n\nimport { getVisibleContacts } from '../../../redux/contacts/contacts-selectors';\nimport styles from './contact-list.module.scss';\n\nconst ContactList = () => {\n  const arrayContacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  const deleteContactById = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {arrayContacts.map(({ id, name, number }) => (\n          <li className={styles.item} key={id}>\n            <p className={styles.text}>\n              {name}: {number}\n            </p>\n            <Button\n              className={styles.button}\n              type=\"button\"\n              variant=\"contained\"\n              onClick={() => deleteContactById(id)}\n              sx={{ mt: 3, mb: 2, backgroundColor: 'rgb(39, 61, 164)' }}\n            >\n              Delete\n            </Button>\n\n            {/* <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => deleteContactById(id)}\n            >\n              Delete\n            </button> */}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\n\nimport ContactForm from '../ContactsPage/ContactForm/ContactForm';\nimport Filter from '../ContactsPage/Filter/Filter';\nimport ContactList from '../ContactsPage/ContactList/ContactList';\nimport {\n  getError,\n  getLoadig,\n  getVisibleContacts,\n} from '../../redux/contacts/contacts-selectors';\n\nimport Loader from 'components/Loader/Loader';\nimport Notiflix from 'notiflix';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(getLoadig);\n  const error = useSelector(getError);\n  const isContacts = Boolean(useSelector(getVisibleContacts).length);\n\n  return (\n    <Box\n      sx={{\n        marginTop: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <div>\n        <h2>Constacts</h2>\n        {isLoading && <Loader />}\n        {error && Notiflix.Notify.failure(error.message)}\n        <Filter />\n\n        {isContacts ? <ContactList /> : <p>No contacts</p>}\n      </div>\n    </Box>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["name","number","getContacts","store","contacts","items","getLoadig","isLoading","getError","error","getVisibleContacts","filter","normalizedFilter","toLowerCase","includes","useState","inititalState","state","setState","useSelector","dispatch","useDispatch","useEffect","fetchContacts","handleChange","target","value","prevState","Box","component","onSubmit","e","preventDefault","data","FormData","currentTarget","find","contact","Notiflix","allData","get","trim","addContact","noValidate","sx","mt","TextField","margin","required","fullWidth","onChange","pattern","type","label","autoFocus","Button","className","styles","variant","mb","backgroundColor","getFilter","size","setFilter","arrayContacts","map","id","onClick","deleteContact","deleteContactById","isContacts","Boolean","length","marginTop","display","flexDirection","alignItems","Loader","message"],"sourceRoot":""}